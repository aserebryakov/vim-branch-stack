*vim-branch-stack.txt*    Version 0.1.0
*vim-branch-stack*

Plugin helping to find the branching path to current line of code.

==============================================================================
CONTENTS                                                        *VimBranchStack*

1. Introduction .... |VimBranchStackIntroduction|
2. Installation .... |VimBranchStackInstallation|
3. Usage ........... |VimBranchStackUsage|
4. Limitations ..... |VimBranchStackLimitations|
5. Contribution .... |VimBranchStackContribution|
6. License ......... |VimBranchStackLicense|
7. Changelog ....... |VimBranchStackChangelog|
8. Credits ......... |VimBranchStackCredits|

==============================================================================
1. Introduction                                     *VimBranchStackIntroduction*

vim-branch-stack plugin is intended to help working on legacy C/C++ code where
functions are long and have many nested branches (if-else, switch-case,
try-catch, while, for).

==============================================================================
2. Installation                                     *VimBranchStackInstallation*

Requirements:
 * python3

Vim 8+:

$ cd ~/.vim/pack/directory_name/start/
$ git clone --recurse-submodules https://github.com/aserebryakov/vim-branch-stack.git


Pathogen:

$ cd ~/.vim/bundle
$ git clone --recurse-submodules https://github.com/aserebryakov/vim-branch-stack.git

NeoBundle:

NeoBundle 'aserebryakov/vim-branch-stack'

Without plugin manager:

Clone or download this repository and copy its contents to your ~/.vim/
directory.

==============================================================================
3. Usage                                                   *VimBranchStackUsage*

The stack is shown in the location window after |BranchStack| command
execuiton while cursor is placed on the target line.

main.cpp
--------
    
    int main ()
    {
        const int meaning = 42;
        const int pi_floor = 3;
    
        if (meaning)
        {
            if (pi_floor == 4)
            {
                // Do the stuff
            }
            else
            {
                // Cursor is here
            }
        }
    
        return 0;
    }

Location window
---------------

  1 main.cpp |6| if (meaning) 
  2 main.cpp |12| + else

==============================================================================
4. Limitations                                       *VimBranchStackLimitations*

The plugin has the following limitations:

  * Commented out code is not supported
  * `goto` is not supported
  * `do-while` is not supported
  * Preprocessing is not supported

==============================================================================
5. Contribution                                     *VimBranchStackContribution*

Source code and issues are hosted on GitHub:

https://github.com/aserebryakov/vim-branch-stack

==============================================================================
6. License                                               *VimBranchStackLicense*

MIT License

Copyright (c) 2018 Alexander Serebryakov (alex.serebr@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

==============================================================================
7. Changelog                                           *VimBranchStackChangelog*

0.1.0

* Initial version

==============================================================================
8. Credits                                               *VimBranchStackCredits*

* Alexander Serebryakov (author)  https://github.com/aserebryakov

==============================================================================
# vim:tw=78:ts=8:ft=help:norl:
